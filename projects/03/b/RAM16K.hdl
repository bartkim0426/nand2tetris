/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // RAM4k * 4 순차나열
    // 뒤에 3자리는 register, 앞 11자리는 RAM4k에서 선택
    DMux4Way(in=load, sel=address[12..13], a=a, b=b, c=c, d=d);

    // address [0..8] -> select register in RAM64
    RAM4K(in=in, load=a, address=address[0..11], out=out1);
    RAM4K(in=in, load=b, address=address[0..11], out=out2);
    RAM4K(in=in, load=c, address=address[0..11], out=out3);
    RAM4K(in=in, load=d, address=address[0..11], out=out4);

    Mux4Way16(a=out1, b=out2, c=out3, d=out4, sel=address[12..13], out=out);
}
