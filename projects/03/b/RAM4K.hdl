/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // RAM512 * 8 순차나열
    // 뒤에 3자리는 register, 앞 9자리는 RAM64 선택
    DMux8Way(in=load, sel=address[9..11], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    // address [0..8] -> select register in RAM64
    RAM512(in=in, load=a, address=address[0..8], out=out1);
    RAM512(in=in, load=b, address=address[0..8], out=out2);
    RAM512(in=in, load=c, address=address[0..8], out=out3);
    RAM512(in=in, load=d, address=address[0..8], out=out4);
    RAM512(in=in, load=e, address=address[0..8], out=out5);
    RAM512(in=in, load=f, address=address[0..8], out=out6);
    RAM512(in=in, load=g, address=address[0..8], out=out7);
    RAM512(in=in, load=h, address=address[0..8], out=out8);

    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[9..11], out=out);
}
