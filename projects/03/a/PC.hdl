/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // inc
    Inc16(in=regout, out=incOut);

    // reset == 1 then 0 else incOut
    Mux16(a=incOut, b[0]=false, sel=reset, out=resetOut);

    // real load: reset=0인 경우 load 무시해야됨
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=realload);
    // laod; load == 0 then in, else resetOut
    Mux16(a=resetOut, b=in, sel=realload, out=loadOut);

    // register load
    Or(a=inc, b=reset, out=tmpload);
    Or(a=tmpload, b=load, out=registerLoad);
    Register(in=loadOut, load=registerLoad, out=regout, out=out);
}
